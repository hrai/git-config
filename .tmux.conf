# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys 'C-h'"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys 'C-j'"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys 'C-k'"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys 'C-l'"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys 'C-\\'" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

bind-key -n C-M-f swap-window -t -1\; select-window -t -1
bind-key -n C-M-b swap-window -t +1\; select-window -t +1

bind-key -n M-f next-window
bind-key -n M-b previous-window

set -g default-shell /bin/zsh

if-shell "uname | grep -v Darwin" {
    set -g default-command $SHELL
    set-option -g default-shell $SHELL
}

# Recording Program Output to a Log
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# Split command remap
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix `
bind-key ` send-prefix

# Start window numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Setting vi mode for tmux
# Press
##   <prefix>[ to enter vi mode
##   Space to start selection
##   Esc  to exit selection & vi mode (copies selected text to tmux clipboard)
##   Switch to another tmux pane
##   <prefix>] to paste the copied content
set-window-option -g mode-keys vi
# nvim term gui colours setting
set-option -sa terminal-overrides ',xterm-256color:RGB'

set -g default-terminal "screen-256color"

# auto window rename
set-window-option -g automatic-rename

set -g status-style bg=colour2,fg=black,dim

setw -g window-status-style fg=brightblue,bg=colour236,dim
setw -g window-status-current-style fg=brightred,bg=colour236,bright

setw -g mode-style bg=colour238,fg=colour196,bold

set -g message-style fg=black,bg=yellow
set -g message-command-style fg=blue,bg=yellow

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-fpp'
set -g @plugin 'laktak/extrakto'

# THEMEPACK
# set -goq @themepack-status-left-area-left-format "#P"
# set -goq @themepack-status-left-area-right-format "#{pane_current_path}"
set -goq @themepack-status-left-area-right-format "#{prefix_highlight}"
set -goq @themepack-status-left-area-left-format "#{pane_current_path}"
set -goq @themepack-status-left-area-left-prefix " "
set -goq @themepack-status-left-area-middle-prefix " "

set -goq @themepack-status-right-area-middle-prefix " "
set -goq @themepack-status-right-area-left-prefix " "
set -goq @themepack-status-right-area-right-prefix " "

set -goq @theme-status-left-length 90

set -g @plugin 'jimeh/tmux-themepack'
set -g @themepack 'powerline/block/green'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# CONFIG FOR TMUX-RESURRECT FOR NEOVIM
# for neovim
set -g @resurrect-strategy-nvim 'session'
## Restore Panes
set -g @resurrect-capture-pane-contents 'on'

set -g @continuum-save-interval '5'
set -g @continuum-restore 'on'

# Extrakto config
set -g @extrakto_fzf_tool "~/.zinit/plugins/junegunn---fzf/fzf"
set -g @extrakto_split_size "15"
set -g @extrakto_clip_tool "xsel --input --clipboard" # works better for nvim
set -g @extrakto_copy_key "tab"      # use tab to copy to clipboard
set -g @extrakto_insert_key "enter"  # use enter to insert selection


# tmux-plugins/tmux-prefix-highlight config
set -g @prefix_highlight_fg 'white' # default is 'colour231'
set -g @prefix_highlight_bg 'blue'  # default is 'colour04'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow,bold' # default is 'fg=default,bg=yellow'
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_sync_mode_attr 'fg=black,bg=green' # default is 'fg=default,bg=yellow'
set -g @prefix_highlight_empty_has_affixes 'on' # default is 'off'
set -g @prefix_highlight_empty_prompt 'Tmux'
set -g @prefix_highlight_output_prefix '< '
set -g @prefix_highlight_output_suffix ' >'


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# Press prefix + I (capital i, as in Install) to fetch the plugin.
run -b '~/.tmux/plugins/tpm/tpm'

bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."
